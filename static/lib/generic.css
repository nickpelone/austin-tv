body{
    background: #424242;
    font-family: 'RobotoDraft', sans-serif;
}

a{
    text-decoration: none;
    color:inherit;
}

#header {
    color:white;
    background:#3F51B5;
    font-size:170%;
}

#launch_container {
    color:white;
    background:#3F51B5;
    text-align:center;
    border-radius: 1em;
    display: inline-block;
    padding:5px;

}

#startCall{
    background: #a246db;
}

#startBroadcast{
    background: #169a2f;
}

paper-input-decorator /deep/ .label-text,
paper-input-decorator /deep/ .error {
    /* inline label,  floating label, error message and error icon color when the input is unfocused */
    color: white;
}

paper-input-decorator /deep/ ::-webkit-input-placeholder {
    /* platform specific rules for placeholder text */
    color: white;
}
paper-input-decorator /deep/ ::-moz-placeholder {
    color: white;
}
paper-input-decorator /deep/ :-ms-input-placeholder {
    color: white;
}

paper-input-decorator /deep/ .unfocused-underline {
    /* line color when the input is unfocused */
    background-color: white;
}

paper-input-decorator[focused] /deep/ .floating-label .label-text {
    /* floating label color when the input is focused */
    color: white;
}

paper-input-decorator /deep/ .focused-underline {
    /* line color when the input is focused */
    background-color: white;
}

paper-input-decorator.invalid[focused] /deep/ .floated-label .label-text,
paper-input-decorator[focused] /deep/ .error {
    /* floating label, error message nad error icon color when the input is invalid and focused */
    color: #ffffff;
}

paper-input-decorator.invalid /deep/ .focused-underline {
    /* line and color when the input is invalid and focused */
    background-color: #ffffff;
}
